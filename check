#!/bin/bash

prefix="$PWD/$1"
lines="${2-1}"
comp="$prefix/.complete"
todo="$prefix/todo"
newTodo="$todo.new"
newComp="$comp.new"

################################################################################
# INPUT VALIDATION
################################################################################
if ! [ -d "$prefix" ]; then
  echo ERROR: "$prefix" is not a directory! 1>&2
  exit 1
fi

if [ -f "$newComp" ]; then 
  echo ERROR: "$newComp" should not exist. 1>&2 
  echo A previous transaction probably failed. 1>&2
  echo Clean up "$newComp" 'then' run "$0" again. 1>&2
  exit 1
fi

if [ -f "$newTodo" ]; then 
  echo ERROR: "$newTodo" should not exist. 1>&2 
  echo A previous transaction probably failed. 1>&2
  echo Clean up "$newTodo" 'then' run "$0" again. 1>&2
  exit 1
fi

if ! [ -f "$todo" ]; then
  echo ERROR: "$todo" does not exist! 1>&2 
  exit 1
fi

if ! [[ "$lines" =~ ^[0-9]+$ ]]; then
  echo ERROR: Number of loops must be an integer. 1>&2
  exit 1
fi

################################################################################
# FILE SETUP
################################################################################

: > "$newComp"
: > "$newTodo"

touch "$comp"

################################################################################
# FUNCTIONS
################################################################################

phase=0
line=''
trim () {
  if [[ "$line" =~ ^[[:space:]]*$ ]]; then
    echo "$line" >> "$newComp"
  else
    phase=$((phase + 1))
  fi
  echo $phase $line
}

################################################################################
# MAIN LOOP
################################################################################

while read -r line; do
  echo loops complete, $phase $line
  if [[ $phase == 0 ]]; then
    echo $phase: $line
    trim
  fi

  if [[ $phase == 1 ]]; then
    echo $phase: $line
    echo "$line" | tee -a "$newComp" | xargs -0 printf 'âœ“ %s' 

    lines=$((lines - 1))
    if [[ "$lines" == 0 ]]; then
      phase=2
    else
      phase=0
    fi
  fi

  if [[ $phase == 2 ]]; then
    echo $phase: $line
    trim
    continue
  fi

  if [[ $phase == 3 ]]; then
    echo $phase: $line
    echo "$line" >> "$newTodo"
  fi
done < "$todo"

################################################################################
# FILE TEARDOWN
################################################################################

cat "$comp" >> "$newComp"

echo new todo
cat "$newTodo"
echo 

echo new .complete
cat "$newComp"
echo 

mv "$newComp" "$comp"
mv "$newTodo" "$todo"

################################################################################
# WARNINGS 
################################################################################

if [[ "$phase" =~ [01] ]]; then
  echo "Nothing to complete." 1>&2
  exit 1
fi

