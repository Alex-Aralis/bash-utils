#!/bin/bash

prefix="$PWD/$1"
lines="${2-1}"
newTodo="$prefix/.todo.new"
comp="$prefix/.complete"
todo="$prefix/todo"

################################################################################
# INPUT VALIDATION
################################################################################
if ! [ -d "$prefix" ]; then
  echo ERROR: "$prefix" is not a directory! 1>&2
  exit 1
fi

if [ -f "$newTodo" ]; then 
  echo ERROR: "$newTodo" should not exist. 1>&2 
  echo A previous transaction probably failed. 1>&2
  echo Clean up "$newTodo" 'then' run "$0" again. 1>&2
  exit 1
fi

if ! [ -f "$todo" ]; then
  echo ERROR: "$todo" does not exist! 1>&2 
  exit 1
fi

if ! [[ "$lines" =~ ^[0-9]+$ ]]; then
  echo ERROR: Number of loops must be an integer. 1>&2
  exit 1
fi


################################################################################
# PROCESSING
################################################################################

: > "$newTodo"

state="empty"
phase=0

while read -r line; do
  if [[ "$state" == "empty" ]]; then
    state="trim"
  fi

  if [[ "$state" == "trim" ]]; then 
    if ! [[ "$line" =~ ^[[:space:]]*$ ]]; then
      phase=$((phase + 1))
    fi
  fi

  case $phase in
  0)
    echo "$line" >> "$comp"
    ;;
  1) 
    echo "$line" | tee -a "$comp" | xargs -0 printf 'âœ“ %s' 

    lines=$((lines - 1))
    if [[ "$lines" == 0 ]]; then
      phase=2
    else
      phase=0
    fi
    ;;
  2) 
    echo "$line" >> "$comp"
    ;;
  3)
    state="todo"
    ;;
  esac

  if [[ "$state" == "todo" ]]; then
    echo "$line" >> "$newTodo"
  fi
done < "$todo"

mv -f "$newTodo" "$todo"

if [[ "$phase" =~ [01] ]]; then
  echo "Nothing to complete." 1>&2
  exit 1
fi

