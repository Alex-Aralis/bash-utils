#!/bin/bash

prefix="$PWD/$1"
todo="$prefix/todo"
comp="$prefix/.complete"
newComp="$comp.new"
newTodo="$todo.new"
lines="${2-1}"
MAX_LINES=$(wc -l < "$comp")

################################################################################
# INPUT VALIDATION
################################################################################
if ! [ -d "$prefix" ]; then
  echo ERROR: "$prefix" is not a directory! 1>&2
  exit 1
fi

if [ -f "$newTodo" ]; then 
  echo ERROR: "$newTodo" should not exist. 1>&2 
  echo A previous transaction probably failed. 1>&2
  echo Clean up "$newTodo" 'then' run "$0" again. 1>&2
  exit 1
fi

if [ -f "$newComp" ]; then 
  echo ERROR: "$newComp" should not exist. 1>&2 
  echo A previous transaction probably failed. 1>&2
  echo Clean up "$newComp" 'then' run "$0" again. 1>&2
  exit 1
fi

if ! [ -f "$todo" ]; then
  echo ERROR: "$todo" does not exist! 1>&2 
  exit 1
fi

if ! [[ "$lines" =~ ^[0-9]+$ ]]; then
  echo ERROR: Number of loops must be an integer. 1>&2
  exit 1
fi

################################################################################
# FUNCTIONS
################################################################################
line=''
getLine () {
  echo "running get line"
  if [ "$2" -lt "$MAX_LINES" ]; then
    echo "success"
    line=$(tail -n "$2" "$1" | head -n 1)
    return 0
  else
    echo "fail"
    return 1
  fi    
  echo $line
}

################################################################################
# PROCESSING
################################################################################
: > "$newTodo"
: > "$newComp"

phase=0
idx=0

while true; do
  idx=$((idx + 1))
  echo "$phase $idx: $line"

  case $phase in
    0)
      if getLine "$comp" "$idx"; then
        echo "$phase $idx: $line"

        if [[ "$line" =~ ^[[:space:]]*$ ]]; then
          echo "$line" >> "$newTodo"
        else
          phase=1
        fi
      else
        echo breaking because of gitLine
        break;
      fi

      continue
      ;;
    1) 
      echo "$line" | tee -a "$newTodo" | xargs -0 printf 'â†© %s' 

      lines=$((lines - 1))
      if [[ "$lines" == 0 ]]; then
        phase=2
      else
        phase=0
      fi

      continue
      ;;
    2)
      break
      ;;
  esac
done

cat "$todo" >> "$newTodo"
head -n -"$idx" "$comp" >> "$newComp"

mv -f "$newTodo" "$todo"
mv -f "$newComp" "$comp"

if [[ "$phase" =~ [01] ]]; then
  echo "Nothing to complete." 1>&2
  exit 1
fi

